/*
* ============================================================================
*  Name     : CRollerCoasterAppUi from RollerCoasterAppui.cpp
*  Part of  : RollerCoaster
*  Created  : 28.12.2004 by Plusplus
*  Implementation notes:
*     Initial content was generated by Series 60 Application Wizard.
*  Version  :
*  Copyright: 2004 Plusplus (plusplus AT free.fr)
* ============================================================================
*/

// INCLUDE FILES
#include "RollerCoasterAppui.h"
#include "RollerCoasterContainer.h"
#include <RollerCoaster.rsg>
#include "RollerCoaster.hrh"

#include <avkon.hrh>

// ================= MEMBER FUNCTIONS =======================
//
// ----------------------------------------------------------
// CRollerCoasterAppUi::ConstructL()
//
// ----------------------------------------------------------
//
void CRollerCoasterAppUi::ConstructL()
    {
    BaseConstructL();

    iAppContainer = new (ELeave) CRollerCoasterContainer;
    iAppContainer->SetMopParent( this );
    iAppContainer->ConstructL( ClientRect() );
    AddToStackL( iAppContainer );
    }

// ----------------------------------------------------
// CRollerCoasterAppUi::~CRollerCoasterAppUi()
// Destructor
// Frees reserved resources
// ----------------------------------------------------
//
CRollerCoasterAppUi::~CRollerCoasterAppUi()
    {
    if (iAppContainer)
        {
        RemoveFromStack( iAppContainer );
        delete iAppContainer;
        }
   }

// ------------------------------------------------------------------------------
// CRollerCoasterAppUi::DynInitMenuPaneL(TInt aResourceId,CEikMenuPane* aMenuPane)
//  This function is called by the EIKON framework just before it displays
//  a menu pane. Its default implementation is empty, and by overriding it,
//  the application can set the state of menu items dynamically according
//  to the state of application data.
// ------------------------------------------------------------------------------
//
void CRollerCoasterAppUi::DynInitMenuPaneL(
    TInt /*aResourceId*/,CEikMenuPane* /*aMenuPane*/)
    {
    }

// ----------------------------------------------------
// CRollerCoasterAppUi::HandleKeyEventL(
//     const TKeyEvent& aKeyEvent,TEventCode /*aType*/)
// takes care of key event handling
// ----------------------------------------------------
//
TKeyResponse CRollerCoasterAppUi::HandleKeyEventL(
    const TKeyEvent& /*aKeyEvent*/,TEventCode /*aType*/)
    {
    return EKeyWasNotConsumed;
    }

// ----------------------------------------------------
// CRollerCoasterAppUi::HandleCommandL(TInt aCommand)
// takes care of command handling
// ----------------------------------------------------
//
void CRollerCoasterAppUi::HandleCommandL(TInt aCommand)
    {
    switch ( aCommand )
        {
        case EAknSoftkeyBack:
        case EEikCmdExit:
            {
            Exit();
            break;
            }
        case ERollerCoasterCmdShadeSmooth:
            {
            iAppContainer->iRollerCoaster->SmoothShading();
            break;
            }
        case ERollerCoasterCmdShadeFlat:
            {
            iAppContainer->iRollerCoaster->FlatShading();
            break;
            }
        case ERollerCoasterCmdTogglePerspective:
            {
            bool value = iAppContainer->iRollerCoaster->GetPerspectiveCorrection();
            iAppContainer->iRollerCoaster->SetPerspectiveCorrection(!value);
            break;
            }
        case ERollerCoasterCmdToggleMipmapping:
            {
            bool value = iAppContainer->iRollerCoaster->GetMipmapping();
            iAppContainer->iRollerCoaster->SetMipmapping(!value);
            break;
            }
        default:
            break;
        }
    }



// End of File
